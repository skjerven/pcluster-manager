[{"uri":"http://aws-samples.github.io/pcluster-manager/","title":"Setup Pcluster Manager","tags":[],"description":"","content":"PCluster Manager - Make HPC Easy Quickly and easily create HPC cluster in AWS using Pcluster Manager. This UI uses the AWS ParallelCluster 3.0 API to Create, Update and Delete Clusters as well as access, view logs, and build Amazon Machine Images (AMI\u0026rsquo;s).\nWant to request a new feature?  First checkout the Roadmap If you don\u0026rsquo;t already see your feature, open a feature request  You can get started with your first cluster in as little as 15 minutes following 1 - Setup Pcluster Manager\n"},{"uri":"http://aws-samples.github.io/pcluster-manager/01-getting-started.html","title":"Setup Pcluster Manager","tags":[],"description":"","content":"This workshop walks you through setting up Pcluster Manager. You learn how to navigate the AWS Management Console, access relevant services, and how to deploy a basic infrastructure. Specifically, you learn how to:\n Sign in to the AWS Management Console and explore it. Deploy Pcluster Manager Connect to the Web UI  You can proceed to the next stage of the workshop once the preparation completed and the stacks deployed.\nSome pages are long and you will need to scroll down to read all the instructions.\n "},{"uri":"http://aws-samples.github.io/pcluster-manager/01-getting-started/01-aws-console-login.html","title":"a. Access AWS","tags":[],"description":"","content":"Depending on your workshop, you may access the AWS Management Console through direct sign-in (here) or as directed by your trainer. To sign in, enter your AWS Account ID or alias, IAM user name, and password that was provided to you for this lab.\nAfter you sign in, take a few minutes to explore the navigation components of the AWS Management Console.\n A search bar allows you to quickly locate services based on text. Recently visited services are located below the search bar. In the toolbar, the Services drop-down menu populates a list of all services. The Support drop-down menu includes links to support and documentation. The Region drop-down menu allows you to select a specific AWS Region.  Start this workshop by selecting an AWS Region:\nChoose the Region drop-down menu, then choose US East (N. Virginia) us-east-1.\n"},{"uri":"http://aws-samples.github.io/pcluster-manager/01-getting-started/02-pcmanager-install.html","title":"b. Deploy Pcluster Manager","tags":[],"description":"","content":"The AWS ParallelCluster API has been released with the version 3 of AWS ParallelCluster. It enables you to to manage clusters though an API hosted on AWS and build workflows to manage your cluster lifecycle with Python.\nPcluster Manager is a web UI that built upon the AWS ParallelCluster CLI that you can use to manage your compute clusters. It\u0026rsquo;ll take about 20 minutes to deploy both stacks. You will initiate the deployment now to have it ready by the time you need it.\n Deploy the Pcluster Manager stack by clicking on the link in your region. If you don\u0026rsquo;t have a prefered region use Ohio (us-east-2).  If you don\u0026rsquo;t see your region click More Regions (Click to expand) below.\n    Region Launch     Ohio (us-east-2)    North Virginia (us-east-1)    Ireland (eu-west-1)    Frankfurt (eu-central-1)       More Regions (Click to expand)      Region Launch     Oregon (us-west-2)    California (us-west-1)    London (eu-west-2)    Paris (eu-north-1)    Stockholm (eu-north-1)    Middle East (me-south-1)    South America (sa-east-1)    Canada (ca-central-1)    Hong Kong (ap-east-1)    Tokyo (ap-northeast-1)    Seoul (ap-northeast-2)    Mumbai (ap-south-1)    Singapore (ap-southeast-1)    Sydney (ap-southeast-2)    GovCloud West (us-gov-west-1)       The AWS Console opens on the AWS CloudFormation panel to deploy your stack. Update the field AdminUserEmail with a valid email to receive a temporary password in order to connect to the Pcluster Manager GUI. Leave the other fields with their default values and click Next to proceed to Step 3.  Scroll down to the bottom of the Stage 3 page (Configure stack options) and click Next. Scroll down to the bottom of the Stage 4 page (Review) and click on the the two tick boxes to create new IAM resources. Once done, click on Create stack.  The stack is deploying using AWS CloudFormation. It will take ~20 minutes to deploy the AWS ParallelCluster API and Pcluster Manager GUI. In the meantime, you will complete the first part of the lab. Continue to the next page to define the configuration of your first HPC system in AWS.\nEnsure that you entered a valid email when deploying the Pcluster Manager stack. This email will be used to send you the credentials to connect to Pcluster Manager. If the email you will have to delete and recreate it which may delay your progression.\n "},{"uri":"http://aws-samples.github.io/pcluster-manager/01-getting-started/03-pcmanager-connect.html","title":"c. Connect to Pcluster Manager","tags":[],"description":"","content":" During deployment you received an email titled [PclusterManager] Welcome to Pcluster Manager, please verify your account.. Click on the link to login with the temporary code provided.  Enter the credentials using the email you used when deploying the stack and the temporary password from the email above.  You will be asked to provide a new password. Enter a new password to complete signup.  Congrats! You are ready to create your HPC cluster in AWS. Let\u0026rsquo;s do that in the next section.\nTo get the URL outside of the email, go to AWS CloudFormation \u0026gt; pcluster-manager \u0026gt; Outputs then click on the PclusterManagerUrl to connect.  "},{"uri":"http://aws-samples.github.io/pcluster-manager/01-getting-started/04-summary.html","title":"d. Summary","tags":[],"description":"","content":"In this part of the lab you deployed the AWS ParallelCluster API and Pcluster Manager. You should see a screen that looks like:\n"},{"uri":"http://aws-samples.github.io/pcluster-manager/02-tutorials.html","title":"Tutorials","tags":[],"description":"","content":""},{"uri":"http://aws-samples.github.io/pcluster-manager/02-tutorials/01-setup-sms.html","title":"a. Setup SMS for MFA","tags":[],"description":"","content":"To enable Multi-Factor Authentication (MFA) with Pcluster Manager there\u0026rsquo;s two setup steps that need to be completed.\n Setup an Origination number Add a sandbox number  1. Setup an Origination Number   Navigate to Pinpoint Phone Numbers Console \u0026gt; Click Request Phone Number\nFill out the following options:\n   Option Description     Country [Your Country]   Number Type Toll Free   Capabilities SMS   Default Message Type Transactional      Click Next \u0026gt; Request\n  2. Add a sandbox number   Next navigate to the SNS SMS Console \u0026gt; Click **Add a phone number\u0026quot;\n  Enter the phone number of the user and set verification message language\n  You\u0026rsquo;ll receive a text message, enter that code to verify your number\n  3. Test with Pcluster Manager Now that you\u0026rsquo;ve gotten the SMS portion setup you can go ahead and login. You\u0026rsquo;ll see a screen after you enter your username/passowrd that looks like:\nIf everthing is setup properly you\u0026rsquo;ll receive a text message that allows you to login.\n"},{"uri":"http://aws-samples.github.io/pcluster-manager/02-tutorials/02-slurm-accounting.html","title":"b. Slurm Accounting","tags":[],"description":"","content":"In this tutorial we will work through setting up Slurm Accounting. This enables many features within slurm, including job resource tracking and providing a necessary building block to slurm federation.\nStep 1 - Setup External Accounting Database The first requirement is to setup an external database that Slurm can use to store the accounting data.\nUse the following CloudFormation Quick-Create link to create the database in your AWS account. Note that if you would like to create the databas in a different region, change the value of the region parameter in the URL to the region of your choice and reload the page.\n\nWhen you\u0026rsquo;re creating the stack, be sure to specify the Public subnet AZ and Private subnet AZ parameters to correspond to the region where you are creating the stack. All other values should be suitable as defaults, however feel free to change the database instance type depending on your workload needs.\nStep 2- Retrieve the outputs from the CloudFormation stack Once the stack has reached a Completed state. You will need to go to the Outputs tab of the stack and make note of the properties as they will be used in the creation of your cluster.\nStep 3 - Add permissions to your lambda In order to allow our cluster access to secrets we need to add an additional IAM policy.\nGo to the Lambda service in the AWS Console and search for PclusterManagerFunction (see here, possibly changing the region to meet your needs Lambda Functions ). Once you find your Function, select it go to Configuration \u0026gt; Permissions \u0026gt; Click on the role under Role name.\nSelect Add permissions \u0026gt; Attach policy and choose the SecretsManagerReadWritePolicy. You might limit this access to the secret that was created by CloudFormation.\nStep 4 - Create Your Cluster Next, go to Pcluster Manager and choose the option to create a new cluster. There are several specific changes you will need to make when creating this cluster.\nCluster Properties Choose a suitable name for your cluster, and then in the Cluster Properties window, be sure to choose the VPC that was created by the cloudformation stack. It will have the prefix that you chose and -vpc as the name, though you can also reference the PClusterVpcId from the CloudFormation Stack Outputs.\nHeadNode Properties Choose the -public-subnet Subnet for your HeadNode:\nYou will also need to enable the Virtual Console option as that allows Pcluster Manager to interact with the cluster directly:\nBe sure to enable the Security Group referenced in the CloudFormation outputs so that the HeadNode can access the database.\nNext we\u0026rsquo;ll enable a known script that will install slurm accounting on the HeadNode.\n Choose the advanced options Under the On Configured option, Choose the Multi-Script Runner which has some pre-programmed scripts in it In the search box choose Slurm Accounting Fill in the values for the Secret ARN and RDS Endpoint from the cloudformation output Under IAM Policies add arn:aws:iam::aws:policy/SecretsManagerReadWrite so that the HeadNode can access the password to the database generated by the CloudFormation script. Be sure to actually click Add so that it is added to the list.  Remaining Options For the remainder of your cluster configuration choose Storage and Queue options that fit the needs of your application. Be sure to choose the -private-subnet for your Compute Queues. And finally, Create your cluster.\nStep 5 - Submit a job Once the cluster has been successfully created, go to the Scheduling tab and select Submit Job\nChoose a name for your job, a number of nodes to run under, choose to Run a command and provide a simple sleep 30 command.\nStep 5 - View the Accounting Tab Once you\u0026rsquo;ve submitted a job, you can see the job information under the Accounting tab\nYou can use any of the filters at the top to narrow down the number of jobs in the view to select specific jobs.\nIf you choose the Job ID in the left column you can see further detials about the job.\nSample Config For anyone looking to create a cluster directly with a config.yaml an example is provided below. Note you will need to replace any ${VARIABLES} with information from your account. Feel free to customize the remaining cluster configuration to your needs.\nHeadNode:  InstanceType: t2.micro  Ssh:  KeyName: ${KEY_PAIR}  Networking:  SubnetId: ${PRIVATE_SUBNET}  AdditionalSecurityGroups:  - ${SECURITY_GROUP}  Iam:  AdditionalIamPolicies:  - Policy: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore  - Policy: arn:aws:iam::aws:policy/SecretsManagerReadWrite  CustomActions:  OnNodeConfigured:  Script: \u0026gt;- https://raw.githubusercontent.com/aws-samples/pcluster-manager/post-install-scripts/resources/scripts/multi-runner.py  Args:  - \u0026gt;- https://raw.githubusercontent.com/aws-samples/pcluster-manager/post-install-scripts/resources/scripts/slurm-accounting.sh  - \u0026gt;- -${SECRET_ARN}  - \u0026#39;-${RDS_ENDPOINT}\u0026#39;  - \u0026#39;-3306\u0026#39; Scheduling:  Scheduler: slurm  SlurmQueues:  - Name: queue0  ComputeResources:  - Name: queue0-t2-micro  MinCount: 0  MaxCount: 4  InstanceType: t2.micro  Networking:  SubnetIds:  - ${PRIVATE_SUBNET_ID} Region: us-east-2 Image:  Os: alinux2 "},{"uri":"http://aws-samples.github.io/pcluster-manager/categories.html","title":"Categories","tags":[],"description":"","content":""},{"uri":"http://aws-samples.github.io/pcluster-manager/tags.html","title":"Tags","tags":[],"description":"","content":""}]